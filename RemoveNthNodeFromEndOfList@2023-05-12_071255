/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head.next == null) {
        head = null;
        return head;
        } 
      int sizeOfList = sizeOfLinkedList(head);
      ListNode temp = head.next;
      ListNode temp1 = head;
      if (n == sizeOfList) {
          temp1.next = null;
          head = temp;
          return head;
      }
      for (int i = 0; i < sizeOfList - n-1; i++) {
          temp1 = temp;
          temp = temp.next;
      }
      temp1.next = temp.next;
      temp.next = null;
      return head;
    }

    private int sizeOfLinkedList(ListNode temp2) {
        int size = 1;
        while (temp2.next != null) {
            temp2 = temp2.next;
            size++;
        }
        return size;
    }
}